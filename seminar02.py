# Семинар 2
# Задача №9. 
# По данному целому неотрицательному n вычислите значение n!. 
# N! = 1 * 2 * 3 * … * N (произведение всех чисел от 1 до N) 
# 0! = 1 
# Решить задачу используя цикл while

# n = int(input('Введите число: '))
# mult = 1
# while n > 0:
#     mult = mult * n
#     n = n - 1
# print(mult)

# Задача №11. 
# Дано натуральное число A > 1. 
# Определите, каким по счету числом Фибоначчи оно является, то есть выведите такое число n, 
# что φ(n)=A. Если А не является числом Фибоначчи, выведите число -1.

# n = int(input('Номер элемента ряда Фибоначчи: '))
# n = int(n)
# f1 = 1
# f2 = 1
# index = 2
# while f1 + f2 <= n:
#     f_sum = f1 + f2 # f-sum - последнее число 
#     f1 = f2
#     f2 = f_sum
#     index = index + 1
# if f_sum == n:
#     print(index)
# else:
#     print('-1')
    
# Задача №13. 
# Уставшие от необычно теплой зимы, жители решили узнать, действительно ли это самая длинная 
# оттепель за всю историю наблюдений за погодой. Они обратились к синоптикам, а те, в свою очередь, 
# занялись исследованиями статистики за прошлые годы. Их интересует, сколько дней длилась самая 
# длинная оттепель. Оттепелью они называют период, в который среднесуточная температура ежедневно 
# превышала 0 градусов Цельсия. Напишите программу, помогающую синоптикам в работе. 
# Пользователь вводит число N – общее количество рассматриваемых дней (1 ≤ N ≤ 100). 
# В следующих строках располагается N целых чисел. Каждое число – среднесуточная температура 
# в соответствующий день. Температуры – целые числа и лежат в диапазоне от –50 до 50

# n = int(input('Введите кол-во дней от 1 до 100: '))


# Задача №15. 
# Иван Васильевич пришел на рынок и решил купить два арбуза: один для себя, а другой для тещи. 
# Понятно, что для себя нужно выбрать арбуз потяжелей, а для тещи полегче. 
# Но вот незадача: арбузов слишком много и он не знает как же выбрать самый легкий и самый тяжелый 
# арбуз? Помогите ему! 
# Пользователь вводит одно число N – количество арбузов. Вторая строка содержит N чисел, 
# записанных на новой строчке каждое. Здесь каждое число – это масса соответствующего арбуза

# num[] mellons = int(input('Введите кол-во арбузов: '))
# num[0] = int(input('Введите массу арбуза: '))
# min1 = num[0]
# max1 = num[0]
# i = 1
# while i <= (n - 1):
#     num[i] = int(input('Введите массу арбуза: '))
#     if max1 < num[i]:
#         max1 = num[i]
#     elif min1 > num[i]:
#         min1 = num[i]
#     i = i + 1
# print(min1, max1)

# Домашнее задание
# Задача 1
# На столе лежат n монеток. Некоторые из монеток лежат вверх решкой, а некоторые – гербом. 
# Ваша задача - определить минимальное количество монеток, которые нужно перевернуть, 
# чтобы все монетки лежали одной и той же стороной вверх.
# Входные данные:
# На вход программе подается список coins, где coins[i] равно 0, если i-я монетка лежит 
# гербом вверх, и равно 1, если i-я монетка лежит решкой вверх. Размер списка не превышает 
# 1000 элементов.
# Выходные данные:
# Программа должна вывести одно целое число - минимальное количество монеток, 
# которые нужно перевернуть.

# coins = [0, 1, 1, 1]
# count = len(coins)
# print(count)

# или вариант для ввода с клавиатуры:
# a = input('Введите последовательность из 0 и 1 через пробел: ')
# coins = [int(i) for i in a.split(' ') if i.isdigit()] 
# print(coins) 
# count = len(coins)
# print(count)

# sum_0 = 0
# sum_1 = 0
# i = 0
# while i <= count - 1:
#     if coins[i] == 0:
#         sum_0 = sum_0 + 1
#     else:
#         sum_1 = sum_1 + 1
#     i = i + 1
# if sum_0 < sum_1:
#     print(sum_0)
# else:
#     print(sum_1)
    
# решение автотеста:

# count_zero = 0
# count_one = 0

# for coin in coins:
#     if coin == 0:
#         count_zero += 1
#     else:
#         count_one += 1

# if count_one > count_zero:
#     print(count_zero)
# else:
#     print(count_one)

# Задача 2
# Петя и Катя – брат и сестра. Петя – студент, а Катя – школьница. Петя помогает Кате по математике.
# Он задумывает два натуральных числа X и Y (X,Y≤1000), а Катя должна их отгадать. 
# Для этого Петя делает две подсказки. Он называет сумму этих чисел S и их произведение P. 
# Помогите Кате отгадать задуманные Петей числа.
# Примечание: числа S и P задавать не нужно, они будут передаваться в тестах. 
# В результате вы должны вывести все возможные пары чисел X и Y через пробел, такие что X <= Y.

# s = x + y
# p = x * y
# p = (s - y) * y = sy - 2y


# s, p = map(int, input().split())
# s = int(input('Введите число S: '))
# p = int(input('Введите число P: '))

# s = 12
# p = 27
# d = s**2 - (4 * p)

# if d < 0: // этот вариант не интересует
#     print('end') 
# elif d == 0: // этот вариант не интересует, т.к. результат отрицательный
#     x = (-s) // 2
#     y = s - x
#     print(x, y)
# elif d > 0:
#     x = (s - int((d ** 0.5))) // 2
#     y = (s + int((d ** 0.5))) // 2
#     print(x, y)
# else:
#     print('end')
    
# упрощая:

# s = 12
# p = 27
# # d = s**2 - (4 * p)
# x = (s - int(((s**2 - (4 * p)) ** 0.5))) // 2
# y = (s + int(((s**2 - (4 * p)) ** 0.5))) // 2
# print(x, y)

# решение автотеста:
# solutions = []
# for i in range(1, 1001):
#     for j in range(1, 1001):
#         if s == i + j and p == i * j:
#             solutions.append((min(i, j), max(i, j)))
# solutions = list(set(solutions))

# for solution in solutions:
#     print(solution[0], solution[1])

# Задача 3 
# Требуется вывести все целые степени двойки (т.е. числа вида 2k), не превосходящие числа N.
# 10 -> 1 2 4 8

n = abs(int(input('Введите число N: ')))
# stop = 0
# p = 2
# for i in range(n):
#     if stop != 1:
#         p = p ** i
#         if p <= n:
#             print(p, end='\n')
#             p = 2
#         else:
#             stop = 1
#     else:
#         i = n
        
# решение автотеста:
    
i = 0
while 2 ** i <= n:
    print(2 ** i)
    i += 1