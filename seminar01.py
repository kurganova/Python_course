# print(type(n/a), n/a, n//a, sep = ' ')
# print(type(n/a), n/a, n//a, sep = '--+--')
# print(type(n/a), n/a, n//a, end = '\n')
# print(type(n/a), n/a, n//a, end = 'aaa')

# print(type(n/a), int(14/5), sep = ' ')
# print(type(n/a), int(-14/5), -14//5, sep = ' ')

# print(14 % 5)
# print(25 % 5 == 0)


# True/False воспринимаются как целые числа 1/0, поэтому такая операция тоже возможна:
# print((14 % 5 == 0) + 4)  


# Чтобы запустить вашу программу - ввести python3 filename.py


# задача 1
# ввести 2 числа и определить большее из них
# n = 14
# a = 14

# if a > n:
#     print(f'{a} more than {n}') #f-строка '', там где переменная в тексте, заключаем ее в фигурные скобки)
# elif a == n:
#     print(f'{a} = {n}')
# else:
#     print(f'{n} more than {a}')
  
#Аналог - задача про вес:

# n = 90 
# if n < 50:
#     print(f's') 
# elif n < 80:
#     print(f'm')
# else:
#     print(f'l')

# РЕШЕНИЕ В ГРУППАХ
# Задача №1

# За день машина проезжает n километров. Сколько дней нужно, чтобы проехать маршрут длиной m
# километров? При решении нельзя пользоваться условной инструкцией if и циклами.

# n = 700
# m = 700
# a =(m + n - 1) // n # способ 1
# #b = -(-m // n) # но лучше вместо минуса использовать абсолют
# b = abs(-m // n) # способо 2
# print(a, b)

# Задача №2
# В некоторой школе решили набрать три новых математических класса и оборудовать кабинеты для них 
# новыми партами. За каждой партой может сидеть два учащихся. Известно количество учащихся 
# в каждом из трех классов. Выведите наименьшее число парт, которое нужно приобрести для них.

#Мое решение:
# a = 20
# b = 21
# c = 22
# n = a % 2
# if n == 0:
#     desk1 = a // 2
# else:
#     desk1 = a // 2 + 1
# n = b % 2
# if n == 0:
#     desk2 = b // 2
# else:
#     desk2 = b // 2 + 1
# n = c % 2
# if n == 0:
#     desk3 = c // 2
# else:
#     desk3 = c // 2 + 1
# print (desk1 + desk2 + desk3)

#Решение преподавателя 3-мя способами:
# a = 20
# b = 21
# c = 22
# desk1 = abs(-a // 2)
# desk2 = (b + 1) // 2
# desk3 = c // 2 + (c % 2 != 0)
# desk = desk1 + desk2 + desk3
# print(desk)

# ДОМАШНЕЕ ЗАДАНИЕ

# Задача №5. 
# Вагоны в электричке пронумерованы натуральными числами, начиная с 1 (при этом иногда вагоны 
# нумеруются от «головы» поезда, а иногда – с «хвоста»; это зависит от того, в какую сторону 
# едет электричка). В каждом вагоне написан его номер. Витя сел в i-й вагон от головы поезда 
# и обнаружил, что его вагон имеет номер j. Он хочет определить, сколько всего вагонов в электричке. 
# Напишите программу, которая будет это делать или сообщать, что без дополнительной информации 
# это сделать невозможно. 
# Input: 3 4(ввод на разных строках) 
# Output: 6

# КОММЕНТ:
# если у вагонов совпадают номера, значит не сможете определить сколкьо вагонов.
# если не совпадают, складываете 2 вагона - 1 (тк. вагон в котором вы находитесь, вы его считаете 2 раза)

# Задача №7. 
# Дано натуральное число. Требуется определить, является ли год с данным номером високосным. 
# Если год является високосным, то выведите YES, иначе выведите NO. 
# Напомним, что в соответствии с григорианским календарем, год является високосным, 
# если его номер кратен 4, но не кратен 100, а также если он кратен 400. 
# Input: 2016 
# Output: YES

# ДЗ автотесты
# Задача 1
# Найдите сумму цифр трехзначного числа n.
# Результат сохраните в перменную res.

# n = 123
# # n1 = n // 100
# # n2 = (n // 10) % 10
# # n3 = n % 10
# # res = n1 + n2 + n3
# # print(res)

# res = (n // 100) + ((n // 10) % 10) + (n % 10)
# print(res)

# решение через цикл:
# a = int(input('Введите число:')) 
# n = a
# sum = 0
# while n > 0:
#     sum = sum + (n % 10)
#     n = n // 10
# print(f'{a} -> {sum}')

# Задача 2
# Петя, Катя и Сережа делают из бумаги журавликов. Вместе они сделали n журавликов.
# Сколько журавликов сделал каждый ребенок, если известно, что Петя и Сережа сделали 
# одинаковое количество журавликов, а Катя сделала в два раза больше журавликов, 
# чем Петя и Сережа вместе?
# Выведите через пробел количество журавликов, сделанных Петей, Катей и Сережей.

# p = n - s - k
# 2p = n - k
# p = s = x
# k = 2 * (s + p) = 2 * (x + x) = 2 * 2x = 4x
# k = 4 * p
# # p = (n - k) / 2 = (n - (4 * p)) / 2 
# p = (n - (4 * p)) / 2
# n - (4 * p) = 2 * p
# n = 6 * p

# решение:
# n = 60
# p = n // 6
# k = 4 * p
# s = p
# print (p, k, s)

# решение автотеста:
# n1 = n // 6
# n2 = n // 6
# n3 = (n // 6) * 4
# print(n1, n3, n2)

# Задача 3
# Вы пользуетесь общественным транспортом? Вероятно, вы расплачивались за проезд и получали билет 
# с номером.
# Счастливым билетом называют такой билет с шестизначным номером, где сумма первых трех цифр 
# равна сумме последних трех.
# Т.е. билет с номером 385916 – счастливый, т.к. 3+8+5=9+1+6.
# Вам требуется написать программу, которая проверяет счастливость билета с номером n 
# и выводит на экран yes или no.

# n = 123456
# n1 = n // 100000 # Нахождение первой цифры числа
# n2 = (n % 100000) // 10000 # Нахождение второй цифры числа
# n3 = (n % 10000) // 1000 # Нахождение третьей цифры числа
# res1 = n1 + n2 + n3
# # print (n1, n2, n3 ,res1)
# n4 = (n // 100) % 10 # Нахождение 4 цифры числа
# n5 = (n % 100) // 10 # Нахождение 5 цифры числа
# n6 = n % 10 # Нахождение третьей 6 числа
# res2 = n4 + n5 + n6
# # print (n4, n5, n6 ,res2)
# if res1 == res2 :
#     print("yes")
# else:
#     print("no")
    
# решение автотеста:
# n1 = n // 100000
# n2 = (n % 100000) // 10000
# n3 = (n % 10000) // 1000
# n4 = (n % 1000) // 100
# n5 = (n % 100) // 10
# n6 = n % 10
# if n1 + n2 + n3 == n4 + n5 + n6:
#     print('yes')
# else:
#     print('no')

# решение через строки:
# n = '385926'
# n1 = int(n[0]) + int(n[1]) + int(n[2])
# n2 = int(n[-1]) + int(n[-2]) + int(n[-3])
# if n1 == n2:
#     print('yes')
# else:
#     print('no')
 

# Задача 4
# Определите, можно ли от шоколадки размером a × b долек отломить c долек, 
# если разрешается сделать один разлом по прямой между дольками (то есть разломить шоколадку 
# на два прямоугольника).
# Выведите yes или no соответственно.

# a = 3
# b = 2
# c = 1
# if (c % a == 0 or c % b == 0) and c < (a * b):
#     print('yes')
# else:
#     print('no')

