# Задача №17. 
# Дан список чисел. Определите, сколько в нем встречается различных чисел. 
# Input: [1, 1, 2, 0, -1, 3, 4, 4] 
# Output: 6

# lst = [1, 1, 2, 0, -1, 3, 4, 4]
# lst_1 = []
# for i in lst:
#     if i not in lst_1:
#         lst_1.append(i)
# print(len(lst_1))
# print(len(set(lst_1)))
# num = set()
        
# Задача №19. 
# Дана последовательность из N целых чисел и число K. Необходимо сдвинуть всю последовательность 
# (сдвиг - циклический) на K элементов вправо,  K – положительное число. 
# Input:   [1, 2, 3, 4, 5] k = 3 
# Output:  [4, 5, 1, 2, 3]


# print(lst.pop(2)) # удаляет индекс (удаляет элемент и возвращает его: 3)
# print(lst.remove(4)) # удаляет значение (удаляет и не возвращает: none)
# print(lst)

# lst = [1, 2, 3, 4, 5] 
# k = 4
# for i in range(k):
#     num = lst.pop()
#     lst.insert(0, num)
#     print(lst)


# Немного о словарях:

# x = {"123" : 123, (1, 1, 3) : "123", (1, 2, 3) : [1, 2, 3]}
# print(x)
# for i in x:
#     print(i) # выводит ключи 
#     print(x[i]) # выводит значения
    
# for i in x.items(): # выводит ключи и значения в виде кортежа
#     print(i)
    
# for i, j in x.items(): # выводит ключи и значения
#     print(i, j)
# for i in x.values(): # выводит значения
#     print(i)
    
# Задача №21. 
# Напишите программу для печати всех уникальных значений в словаре. 
# Input:  [{"V": "S001"}, {"V": "S002"}, {"VI": "S001"}, {"VI": "S005"}, {"VII": " S005 "}, {" V ":" S009 "}, {" VIII ":" S007 "}] 
# Output: {'S005', 'S002', 'S007', 'S001', 'S009'}

# Домашнее задание:
    
# Задача 16 (метод count)
# Требуется вычислить, сколько раз встречается некоторое число k в массиве list_1.
# Найдите количество и выведите его.

# list_1 = [1, 2, 1, 1, 3, 33, 4, 5]
# k = 1
# count = list_1.count(k)  
# print(count)

# решение автотеста:
# count = 0
# for i in range(len(list_1)):
#     if list_1[i] == k:
#         count += 1
# print(count)

# Задача 18
# Требуется найти в массиве list_1 самый близкий по значению элемент к заданному числу k 
# и вывести его.
# Считать, что такой элемент может быть только один. 
# Если значение k совпадает с этим элементом - выведите его.

# list_1 = [1, 2, 3, 8, 5]
# k = 9
# count = 0
# for i in range(len(list_1)):
#     if list_1[i] == k:
#         print(k)
#     elif ((list_1[i] == k - count - 1) and (list_1[i] != k)) or ((list_1[i] == k + count + 1) and (list_1[i] != k)):
#         print(list_1[i])
#         count = count + 1

# Решение автотеста:
# m = abs(k - list_1[0])  # модуль числа
# number = list_1[0]
# for i in range(1, len(list_1)):
#     if m > abs(list_1[i] - k):
#         m = abs(list_1[i] - k)
#         number = list_1[i]
# print(number)
     
    
# Задача 20 создаем словарь (цифра - ключ, буквы - значение), циклом фор перебираем по очереди буквы
# переводить в регистр нужный upper/lower, и суммируете в заданную переменную sum 

# В настольной игре Скрабл (Scrabble) каждая буква имеет определенную ценность.
# В случае с английским алфавитом очки распределяются так:
# A, E, I, O, U, L, N, S, T, R – 1 очко;
# D, G – 2 очка;
# B, C, M, P – 3 очка;
# F, H, V, W, Y – 4 очка;
# K – 5 очков;
# J, X – 8 очков;
# Q, Z – 10 очков.
# А русские буквы оцениваются так:
# А, В, Е, И, Н, О, Р, С, Т – 1 очко;
# Д, К, Л, М, П, У – 2 очка;
# Б, Г, Ё, Ь, Я – 3 очка;
# Й, Ы – 4 очка;
# Ж, З, Х, Ц, Ч – 5 очков;
# Ш, Э, Ю – 8 очков;
# Ф, Щ, Ъ – 10 очков.
# Напишите программу, которая вычисляет стоимость введенного пользователем слова k и выводит его. 
# Будем считать, что на вход подается только одно слово, которое содержит либо только английские, 
# либо только русские буквы.

# k = 'Олег'
# import re
# def isLatin(text):
# 	return bool(re.search('[a-zA-Z]', text))

# eng_dict = {'A' : 1, 'E' : 1, 'I' : 1, 'O' : 1, 'U' : 1, 'L' : 1, 'N' : 1, 'S' : 1, 'T' : 1, 'R' : 1, 'D' : 2, 'G' : 2, 'B' : 3, 'C' : 3, 'M' : 3, 'P' : 3, 'F' : 4, 'H' : 4, 'V' : 4, 'W' : 4, 'Y' : 4, 'K' : 5, 'J' : 8, 'X' : 8, 'Q' : 10, 'Z' : 10}
# rus_dict = {'А': 1, 'В': 1, 'Е': 1, 'И': 1, 'Н': 1, 'О': 1, 'Р': 1, 'С': 1, 'Т': 1, 'Д' : 2, 'К' : 2, 'Л' : 2, 'М' : 2, 'П' : 2, 'У' : 2, 'Б' : 3, 'Г' : 3, 'Ё' : 3, 'Ь' : 3, 'Я' : 3, 'Й' : 4, 'Ы' : 4, 'Ж' : 5, 'З' : 5, 'Х' : 5, 'Ц' : 5, 'Ч' : 5, 'Ш' : 8, 'Э' : 8, 'Ю' : 8, 'Ф' : 10, 'Щ' : 10, 'Ъ' : 10}

# k = k.upper()
# sum = 0
# if isLatin(k):
#     for i in k:
#         sum = sum + eng_dict[i]
# else:
#     for i in k:
#         sum = sum + rus_dict[i]
# print(sum)
        
# решение автотеста:

# points_en = {1: 'AEIOULNSTR', 2: 'DG', 3: 'BCMP', 4: 'FHVWY', 5: 'K', 8: 'JX', 10: 'QZ'}
# points_ru = {1: 'АВЕИНОРСТ', 2: 'ДКЛМПУ', 3: 'БГЁЬЯ', 4: 'ЙЫ', 5: 'ЖЗХЦЧ', 8: 'ШЭЮ', 10: 'ФЩЪ'}
# word = k.upper()  # переводим все буквы в верхний регистр
# count = 0
# for i in word:
#     if i in 'QWERTYUIOPASDFGHJKLZXCVBNM':
#         for j in points_en:
#             if i in points_en[j]:
#                 count = count + j
#     else:
#         for j in points_ru:
#             if i in points_ru[j]:
#                 count = count + j
# print(count)
  
        